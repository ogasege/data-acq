AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to deploy Docker image to ECS using Fargate and AWS Secrets Manager.

Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: The VPC ID where your ECS service will be deployed.
  
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The subnets in which your ECS service will run.

  ContainerPort:
    Type: Number
    Description: The port on which your container listens.
    Default: 80

  DesiredCount:
    Type: Number
    Description: Number of tasks that should run in the ECS service.
    Default: 1

  DockerSecret:
    Type: String
    Description: The name of the Secrets Manager secret containing the Docker image URI.
    Default: DockerSecret

Resources:
  # Create the ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: data-acq-cluster

  # Create Task Execution Role 
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECSCloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                Resource: '*'
        - PolicyName: ECSPullImagePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:GetAuthorizationToken
                Resource: '*'

  # Task Definition for the container
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: data-acq-task-definition
      RequiresCompatibilities:
        - FARGATE
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: data-acq-container
          Image: !Sub '{{resolve:secretsmanager:${DockerSecret}:SecretString:username}}/data-acq:latest'
          Essential: true
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/data-acq-service
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  # Security group for ECS tasks
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP traffic to the ECS service
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
          CidrIp: 0.0.0.0/0

  # ECS Service
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: !Ref DesiredCount
      LaunchType: FARGATE
      TaskDefinition: !Ref ECSTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref Subnets
          SecurityGroups:
            - !Ref ECSSecurityGroup
      LoadBalancers: []
      ServiceName: data-acq-service
      HealthCheckGracePeriodSeconds: 60

Outputs:
  ECSClusterName:
    Description: Name of the ECS Cluster
    Value: !Ref ECSCluster

  ECSServiceName:
    Description: Name of the ECS Service
    Value: !Ref ECSService