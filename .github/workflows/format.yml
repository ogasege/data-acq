name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Static code analysis using Ruff
  lint:
    name: Lint Code with Ruff
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install ruff

      - name: Run Ruff
        run: |
          source venv/bin/activate
          ruff check --fix

  # Unit tests with Pytest
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint  # Runs this job only if lint passes

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      # Set PYTHONPATH to point to the modules directory
      - name: Set PYTHONPATH
        run: |
          source venv/bin/activate
          export PYTHONPATH=$PYTHONPATH:$PWD/modules

      # Export the CA_CERT_URL from GitHub Secrets
      - name: Set CA certificate URL
        run: |
        export CA_CERT_URL=${{ secrets.CA_CERT_URL }}

      # Run Pytest
      - name: Run Pytest
        run: |
          source venv/bin/activate
          pytest --maxfail=1 --disable-warnings

  # Docker Build and Push
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test  # Runs this job only if tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/data-acq:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/data-acq:latest